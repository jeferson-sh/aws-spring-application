package com.example.jvm.memory.dump;

import com.example.jvm.memory.dump.components.MemoryLeakSimulator__BeanDefinitions;
import com.example.jvm.memory.dump.controllers.FatorialController__BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.codec.CodecProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.scheduling.annotation.SchedulingConfiguration__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class Application__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("application", Application__BeanDefinitions.getApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("memoryLeakSimulator", MemoryLeakSimulator__BeanDefinitions.getMemoryLeakSimulatorBeanDefinition());
    beanFactory.registerBeanDefinition("fatorialController", FatorialController__BeanDefinitions.getFatorialControllerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.scheduling.annotation.SchedulingConfiguration", SchedulingConfiguration__BeanDefinitions.getSchedulingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.annotation.internalScheduledAnnotationProcessor", SchedulingConfiguration__BeanDefinitions.getInternalScheduledAnnotationProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration", ReactorNettyConfigurations__BeanDefinitions.ReactorResourceFactoryConfiguration.getReactorResourceFactoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactorResourceFactory", ReactorNettyConfigurations__BeanDefinitions.ReactorResourceFactoryConfiguration.getReactorResourceFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties", ReactorNettyProperties__BeanDefinitions.getReactorNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty", ReactiveWebServerFactoryConfiguration__BeanDefinitions.EmbeddedNetty.getEmbeddedNettyBeanDefinition());
    beanFactory.registerBeanDefinition("nettyReactiveWebServerFactory", ReactiveWebServerFactoryConfiguration__BeanDefinitions.EmbeddedNetty.getNettyReactiveWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration", ReactiveWebServerFactoryAutoConfiguration__BeanDefinitions.getReactiveWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveWebServerFactoryCustomizer", ReactiveWebServerFactoryAutoConfiguration__BeanDefinitions.getReactiveWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration", CodecsAutoConfiguration__BeanDefinitions.DefaultCodecsConfiguration.getDefaultCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultCodecCustomizer", CodecsAutoConfiguration__BeanDefinitions.DefaultCodecsConfiguration.getDefaultCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration", CodecsAutoConfiguration__BeanDefinitions.JacksonCodecConfiguration.getJacksonCodecConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonCodecCustomizer", CodecsAutoConfiguration__BeanDefinitions.JacksonCodecConfiguration.getJacksonCodecCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration", CodecsAutoConfiguration__BeanDefinitions.getCodecsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties", CodecProperties__BeanDefinitions.getCodecPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration", ReactiveMultipartAutoConfiguration__BeanDefinitions.getReactiveMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultPartHttpMessageReaderCustomizer", ReactiveMultipartAutoConfiguration__BeanDefinitions.getDefaultPartHttpMessageReaderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.webflux.multipart-org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties", ReactiveMultipartProperties__BeanDefinitions.getReactiveMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration", WebSessionIdResolverAutoConfiguration__BeanDefinitions.getWebSessionIdResolverAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webSessionIdResolver", WebSessionIdResolverAutoConfiguration__BeanDefinitions.getWebSessionIdResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties", WebFluxProperties__BeanDefinitions.getWebFluxPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration", ErrorWebFluxAutoConfiguration__BeanDefinitions.getErrorWebFluxAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorWebExceptionHandler", ErrorWebFluxAutoConfiguration__BeanDefinitions.getErrorWebExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorWebFluxAutoConfiguration__BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getEnableWebFluxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxConversionService", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebFluxConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxValidator", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebFluxValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("localeContextResolver", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getLocaleContextResolverBeanDefinition());
    beanFactory.registerBeanDefinition("webSessionManager", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebSessionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("webHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("responseStatusExceptionHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getResponseStatusExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxContentTypeResolver", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebFluxContentTypeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceUrlProvider", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("serverCodecConfigurer", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getServerCodecConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxAdapterRegistry", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebFluxAdapterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleHandlerAdapter", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getSimpleHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxWebSocketHandlerAdapter", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getWebFluxWebSocketHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("responseEntityResultHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getResponseEntityResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("responseBodyResultHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getResponseBodyResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolutionResultHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getViewResolutionResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("serverResponseResultHandler", WebFluxAutoConfiguration__BeanDefinitions.EnableWebFluxConfiguration.getServerResponseResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig", WebFluxAutoConfiguration__BeanDefinitions.WebFluxConfig.getWebFluxConfigBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration", WebFluxAutoConfiguration__BeanDefinitions.WelcomePageConfiguration.getWelcomePageConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageRouterFunctionMapping", WebFluxAutoConfiguration__BeanDefinitions.WelcomePageConfiguration.getWelcomePageRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration", WebFluxAutoConfiguration__BeanDefinitions.getWebFluxAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig", HttpHandlerAutoConfiguration__BeanDefinitions.AnnotationConfig.getAnnotationConfigBeanDefinition());
    beanFactory.registerBeanDefinition("httpHandler", HttpHandlerAutoConfiguration__BeanDefinitions.AnnotationConfig.getHttpHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration", HttpHandlerAutoConfiguration__BeanDefinitions.getHttpHandlerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration", AvailabilityHealthContributorAutoConfiguration__BeanDefinitions.getAvailabilityHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthStatusAggregator", HealthEndpointConfiguration__BeanDefinitions.getHealthStatusAggregatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthHttpCodeStatusMapper", HealthEndpointConfiguration__BeanDefinitions.getHealthHttpCodeStatusMapperBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroups", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanDefinition());
    beanFactory.registerBeanDefinition("healthContributorRegistry", HealthEndpointConfiguration__BeanDefinitions.getHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupMembershipValidator", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupMembershipValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpoint", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupsBeanPostProcessor", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration", ReactiveHealthEndpointConfiguration__BeanDefinitions.getReactiveHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveHealthContributorRegistry", ReactiveHealthEndpointConfiguration__BeanDefinitions.getReactiveHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration", HealthEndpointReactiveWebExtensionConfiguration__BeanDefinitions.WebFluxAdditionalHealthEndpointPathsConfiguration.getWebFluxAdditionalHealthEndpointPathsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebFluxHandlerMapping", HealthEndpointReactiveWebExtensionConfiguration__BeanDefinitions.WebFluxAdditionalHealthEndpointPathsConfiguration.getHealthEndpointWebFluxHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration", HealthEndpointReactiveWebExtensionConfiguration__BeanDefinitions.getHealthEndpointReactiveWebExtensionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveHealthEndpointWebExtension", HealthEndpointReactiveWebExtensionConfiguration__BeanDefinitions.getReactiveHealthEndpointWebExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration", HealthEndpointAutoConfiguration__BeanDefinitions.getHealthEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties", HealthEndpointProperties__BeanDefinitions.getHealthEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration", InfoContributorAutoConfiguration__BeanDefinitions.getInfoContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties", InfoContributorProperties__BeanDefinitions.getInfoContributorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration", EndpointAutoConfiguration__BeanDefinitions.getEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointOperationParameterMapper", EndpointAutoConfiguration__BeanDefinitions.getEndpointOperationParameterMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCachingOperationInvokerAdvisor", EndpointAutoConfiguration__BeanDefinitions.getEndpointCachingOperationInvokerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration", JacksonEndpointAutoConfiguration__BeanDefinitions.getJacksonEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapper", JacksonEndpointAutoConfiguration__BeanDefinitions.getEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointPathMapper", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointPathMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointMediaTypes", WebEndpointAutoConfiguration__BeanDefinitions.getEndpointMediaTypesBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getControllerEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("pathMappedEndpoints", WebEndpointAutoConfiguration__BeanDefinitions.getPathMappedEndpointsBeanDefinition());
    beanFactory.registerBeanDefinition("webExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getWebExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("controllerExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getControllerExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties", WebEndpointProperties__BeanDefinitions.getWebEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceHealthIndicator", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties", DiskSpaceHealthIndicatorProperties__BeanDefinitions.getDiskSpaceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration", HealthContributorAutoConfiguration__BeanDefinitions.getHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pingHealthContributor", HealthContributorAutoConfiguration__BeanDefinitions.getPingHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration", MetricsAutoConfiguration__BeanDefinitions.getMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("micrometerClock", MetricsAutoConfiguration__BeanDefinitions.getMicrometerClockBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryPostProcessor", MetricsAutoConfiguration__BeanDefinitions.getMeterRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesMeterFilter", MetricsAutoConfiguration__BeanDefinitions.getPropertiesMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryCloser", MetricsAutoConfiguration__BeanDefinitions.getMeterRegistryCloserBeanDefinition());
    beanFactory.registerBeanDefinition("management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties", MetricsProperties__BeanDefinitions.getMetricsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleMetricsExportAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleMeterRegistry", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleMeterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("simpleConfig", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleConfigBeanDefinition());
    beanFactory.registerBeanDefinition("management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties", SimpleProperties__BeanDefinitions.getSimplePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration", CompositeMeterRegistryAutoConfiguration__BeanDefinitions.getCompositeMeterRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jvmGcMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmGcMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmHeapPressureMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmHeapPressureMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmMemoryMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMemoryMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmThreadMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmThreadMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("classLoaderMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getClassLoaderMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmInfoMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmInfoMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmCompilationMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmCompilationMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("logbackMetrics", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration", SystemMetricsAutoConfiguration__BeanDefinitions.getSystemMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("uptimeMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getUptimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("processorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getProcessorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("fileDescriptorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getFileDescriptorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getDiskSpaceMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration", IntegrationMetricsAutoConfiguration__BeanDefinitions.getIntegrationMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsListenerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("startupTimeMetrics", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerConfiguration.getTaskSchedulerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskScheduler", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerConfiguration.getTaskSchedulerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("scheduledBeanLazyInitializationExcludeFilter", TaskSchedulingAutoConfiguration__BeanDefinitions.getScheduledBeanLazyInitializationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getTaskExecutorMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eagerTaskExecutorMetrics", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getEagerTaskExecutorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getOnlyMetricsMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMeterObservationHandler", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getDefaultMeterObservationHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.getMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getOnlyMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsObservationHandlerGrouping", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getMetricsObservationHandlerGroupingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration", ObservationAutoConfiguration__BeanDefinitions.getObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistryPostProcessor", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistry", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesObservationFilter", ObservationAutoConfiguration__BeanDefinitions.getPropertiesObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties", ObservationProperties__BeanDefinitions.getObservationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty", ClientHttpConnectorFactoryConfiguration__BeanDefinitions.ReactorNetty.getReactorNettyBeanDefinition());
    beanFactory.registerBeanDefinition("reactorClientHttpConnectorFactory", ClientHttpConnectorFactoryConfiguration__BeanDefinitions.ReactorNetty.getReactorClientHttpConnectorFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration", ClientHttpConnectorAutoConfiguration__BeanDefinitions.getClientHttpConnectorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientHttpConnector", ClientHttpConnectorAutoConfiguration__BeanDefinitions.getWebClientHttpConnectorBeanDefinition());
    beanFactory.registerBeanDefinition("webClientHttpConnectorCustomizer", ClientHttpConnectorAutoConfiguration__BeanDefinitions.getWebClientHttpConnectorCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration", WebClientAutoConfiguration__BeanDefinitions.WebClientCodecsConfiguration.getWebClientCodecsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("exchangeStrategiesCustomizer", WebClientAutoConfiguration__BeanDefinitions.WebClientCodecsConfiguration.getExchangeStrategiesCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration", WebClientAutoConfiguration__BeanDefinitions.getWebClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webClientBuilder", WebClientAutoConfiguration__BeanDefinitions.getWebClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("webClientSsl", WebClientAutoConfiguration__BeanDefinitions.getWebClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpClientUriTagFilter", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMetricsHttpClientUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration", WebClientObservationConfiguration__BeanDefinitions.getWebClientObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationWebClientCustomizer", WebClientObservationConfiguration__BeanDefinitions.getObservationWebClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.getHttpClientObservationsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration", WebFluxObservationAutoConfiguration__BeanDefinitions.getWebFluxObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpServerUriTagFilter", WebFluxObservationAutoConfiguration__BeanDefinitions.getMetricsHttpServerUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServerRequestObservationConvention", WebFluxObservationAutoConfiguration__BeanDefinitions.getDefaultServerRequestObservationConventionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration", ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions.getScheduledTasksObservabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observabilitySchedulingConfigurer", ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions.getObservabilitySchedulingConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration", ReactiveManagementContextAutoConfiguration__BeanDefinitions.getReactiveManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveWebChildContextFactory", ReactiveManagementContextAutoConfiguration__BeanDefinitions.getReactiveWebChildContextFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getClassProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("forceAutoProxyCreatorToUseClassProxying", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getForceAutoProxyCreatorToUseClassProxyingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration", NettyAutoConfiguration__BeanDefinitions.getNettyAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties", NettyProperties__BeanDefinitions.getNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration", ReactorAutoConfiguration__BeanDefinitions.getReactorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties", ReactorProperties__BeanDefinitions.getReactorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.NettyWebServerFactoryCustomizerConfiguration.getNettyWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("nettyWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.NettyWebServerFactoryCustomizerConfiguration.getNettyWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration", WebFluxEndpointManagementContextConfiguration__BeanDefinitions.getWebFluxEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointReactiveHandlerMapping", WebFluxEndpointManagementContextConfiguration__BeanDefinitions.getWebEndpointReactiveHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointHandlerMapping", WebFluxEndpointManagementContextConfiguration__BeanDefinitions.getControllerEndpointHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("serverCodecConfigurerEndpointObjectMapperBeanPostProcessor", WebFluxEndpointManagementContextConfiguration__BeanDefinitions.getServerCodecConfigurerEndpointObjectMapperBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties", CorsEndpointProperties__BeanDefinitions.getCorsEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.EnableSameManagementContextConfiguration.getEnableSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.getSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.getManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties", ManagementServerProperties__BeanDefinitions.getManagementServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
